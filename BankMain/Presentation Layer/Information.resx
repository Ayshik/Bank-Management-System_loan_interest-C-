<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH4gsdBhcqmE6fiAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQsSURBVGhD
        7ZlLKHxRHMeHIvJKLL1TxA5ZkAWJEpZYkLJhIyt5LUR5rclj51VeUdYeKxuUkseSpUQsLERx/n3PnDNz
        zpnfjOvOnf6T5lPfmvn9fud3ft+5d+69g4v9ESJGwo2IESvMz8+zrq4uroWFBRENDSExMjw8zFwuF6mR
        kRFR5SyOG2loaCANqEKN0zhqZHt7mxyc0s7OjljlDI4aiYuLI4emFB8fL1Y5g2NG3t/fyYED6ePjQ6wO
        HseMXF1dkcMG0u3trVgdPI4ZeXx8JIcNpKenJ7E6eH5t5O3tjT0/P4t3OtSwgUSB3tjjt1g2cnZ2xqKi
        orRBtra2RNbN0NCQlg8k836CXmoee52fn4vsz1gycnFxoW2iamVlRVS5SUhIIOtUJSUliWo3y8vLZB2E
        va1gychPw5nk5eWRdVB+fr6o8kLVSWFvK1gyQm2g6vLyUlR6OTg4YPX19SwtLY2lp6fz10dHRyLrBWup
        nqqs8GPV9/c32VyV1cNPEei0lbKCp+rz85NlZWV5Fh8eHooMYzExMVpjUxQvLy9sY2ODTU5OsqmpKf76
        9fVVZHWonlLYW4IjKuOZmZl8ZolnitjYWK0BhGHAycmJT05qbm6O10g2Nzf5l5mqhVJSUvgzmcrs7CxZ
        C2FvgFnMHGaWcCO4MZlF0MTEBC8C6qchtbS0JLJuMjIyfGr8CUdfZXFx0adG/U5hFjMPyZuq54hQReal
        FTw8PLD7+3vxzgu13opM0Bt7mGCWQOs9r3p6erQC9dz8id889ZqyenkF5unf3d0tMooRsLe3x1paWtj4
        +LiIuPn6+uJxtUlycjLP4Q6txu1odHSU9zK/W9gTe6tgNsR3d3dFxI3vsTWgvhvQ+vo6z1M5OwKrq6tk
        jrr/mHiM3N3dsba2NlZQUMCam5t57ObmhmwMAXwqVM6O9vf3eU8qB11fX/M8ZsOMra2tfGYJn2hsbExb
        NDMz404qMVXytOro6CDzdtTZ2cl7JiYmknkITE9PazHMDlynp6daAgLHx8c+cany8nJeU1paSubtSPYs
        Kysj85A8xcw491BZWakFo6OjebF5FVNVW1vLa3CIqbwdFRUV8Z41NTVkHpJXKcyoxrkH85KGWz9oamrS
        4qqkkcLCQjJvR8XFxbxndXU1mYcwE8CMalx40ItzcnJ4cWNjoxZX9b+MYCaAGYm8HsjOzubF4WwEMxJ5
        PRAxEqQiRrzSAxEjQcpxI6mpqbw4nI1gRp88/qskhZ+ca2trvDicjWBGzKrO7nn6NQlnIxR+jdTV1ZHN
        oKqqKl4TCiPms58qzOQPv0b6+/tZSUkJq6io0IRYX18frwmFkd7eXv5UTe2Lmfzh14gVQmHELhEjQP3L
        ZLDKzc0VXe0RlJGBgQH+O7+9vT0oocfg4KDoao+gjIQTESPhxh8xwtg/C95YegM6nycAAAAASUVORK5C
        YII=
</value>
  </data>
</root>